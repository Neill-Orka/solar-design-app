"""Add registration token system

Revision ID: c9ef245080ae
Revises: 48ef5379c11f
Create Date: 2025-08-19 13:12:25.547845

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c9ef245080ae'
down_revision = '48ef5379c11f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    op.create_table('registration_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=64), nullable=False),
    sa.Column('role', sa.String(length=10), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('is_used', sa.Boolean(), nullable=True),
    sa.Column('used_by_id', sa.Integer(), nullable=True),
    sa.Column('used_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint("role IN ('ADMIN', 'SALES', 'DESIGN')", name='registration_tokens_role_check'),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['used_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('users_invited_by_id_fkey'), type_='foreignkey')
        batch_op.drop_column('invitation_expires')
        batch_op.drop_column('invitation_token')
        batch_op.drop_column('invited_by_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('invited_by_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('invitation_token', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('invitation_expires', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key(batch_op.f('users_invited_by_id_fkey'), 'users', ['invited_by_id'], ['id'])

    op.drop_table('registration_tokens')
    # ### end Alembic commands ###
