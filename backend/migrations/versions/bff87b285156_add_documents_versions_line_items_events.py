"""Add documents + versions + line_items + events

Revision ID: bff87b285156
Revises: 68db1b832aea
Create Date: 2025-08-26 08:53:38.311596

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'bff87b285156'
down_revision = '68db1b832aea'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('kind', sa.Enum('QUOTE', 'REPORT', 'INVOICE', name='documentkind'), nullable=False),
    sa.Column('number', sa.String(length=64), nullable=True),
    sa.Column('current_version_no', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('OPEN', 'ACCEPTED', 'DECLINED', 'CLOSED', name='documentstatus'), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('client_snapshot_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('tags', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('documents', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_documents_number'), ['number'], unique=True)

    op.create_table('document_versions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('version_no', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('DRAFT', 'SENT', 'ACCEPTED', 'DECLINED', 'EXPIRED', name='versionstatus'), nullable=False),
    sa.Column('valid_until', sa.DateTime(), nullable=True),
    sa.Column('price_locked_at', sa.DateTime(), nullable=True),
    sa.Column('payload_json', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('totals_json', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('pdf_path', sa.String(length=512), nullable=True),
    sa.Column('html_hash', sa.String(length=64), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('document_id', 'version_no', name='uq_document_version')
    )
    op.create_table('document_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('document_version_id', sa.Integer(), nullable=False),
    sa.Column('event', sa.String(length=32), nullable=False),
    sa.Column('meta_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['document_version_id'], ['document_versions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('document_line_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('document_version_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('product_snapshot_json', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('qty', sa.Float(), nullable=False),
    sa.Column('unit_cost_locked', sa.Float(), nullable=False),
    sa.Column('unit_price_locked', sa.Float(), nullable=False),
    sa.Column('margin_locked', sa.Float(), nullable=True),
    sa.Column('line_total_locked', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['document_version_id'], ['document_versions.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('document_line_items')
    op.drop_table('document_events')
    op.drop_table('document_versions')
    with op.batch_alter_table('documents', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_documents_number'))

    op.drop_table('documents')
    # ### end Alembic commands ###
